#compdef mill


__mill_zsh_main ()
{
	local curcontext="$curcontext" state state_descr line
	typeset -A opt_args
	local -a orig_words

	orig_words=( ${words[@]} )
	local state

	_arguments \
		'1: :->target'\

	case $state in
		(target) _arguments '1:profiles:($(mill --disable-ticker resolve _ 2> /dev/null))' ;;
		(*) compadd $(mill --disable-ticker resolve $words[2]._ 2> /dev/null | cut -d. -f2) ;;
	esac
}

_mill() {
	local _ret=1
	local cur cword prev

	cur=${words[CURRENT]}
	prev=${words[CURRENT-1]}
	let cword=CURRENT-1

	__${service}_zsh_main

	let _ret && _default && _ret=0
	return _ret
}


_mill
