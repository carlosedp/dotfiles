#compdef mill

__mill_debug()
{
	local file="$BASH_COMP_DEBUG_FILE"
	if [[ -n ${file} ]]; then
		echo "$*" >> "${file}"
	fi
}

_mill() {
	local lastParam lastChar
	__mill_debug "\n========= starting completion logic =========="
	__mill_debug "CURRENT: ${CURRENT}, words[*]: ${words[*]}"

	# The user could have moved the cursor backwards on the command-line.
	# We need to trigger completion from the $CURRENT location, so we need
	# to truncate the command-line ($words) up to the $CURRENT location.
	# (We cannot use $CURSOR as its value does not work when a command is an alias.)
	words=("${=words[1,CURRENT]}")
	__mill_debug "Truncated words[*]: ${words[*]},"

	lastParam=${words[-1]}
	lastChar=${lastParam[-1]}
	__mill_debug "lastParam: ${lastParam}, lastChar: ${lastChar}"

	if [[ ${lastParam} == "" ]]; then
		__mill_debug "searching completion for root commands"
		_alternative -C dataout \
			"args:custom:($(mill --disable-ticker resolve _ 2> /dev/null))"
	else
		__mill_debug "searching for tasks to ${lastParam}"
		_alternative \
			"1:profiles:($(mill --disable-ticker resolve "${lastParam}"_ 2> /dev/null))"
	fi
}

_mill
