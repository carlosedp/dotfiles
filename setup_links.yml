- name: Setup Links
  hosts: all

  vars_files:
    - variables.yml

  tasks:
    - name: Include Detect OS and User tasks
      ansible.builtin.include_tasks: detect_os_user.yml

    - name: Block of tasks to be run for the user
      become: true
      become_user: "{{ ansible_user_id }}"
      block:
        - name: Check if sync folder exists (MacOS)
          ansible.builtin.stat:
            path: "{{ sync_folder_mac }}"
          register: sync_folder_exists
          when: is_macos

        - name: Check if sync folder exists (WSL2)
          ansible.builtin.stat:
            path: "{{ sync_folder_wsl2 }}"
          register: sync_folder_wsl2_exists
          when: is_wsl2

        - name: Build a list of all rc files
          ansible.builtin.find:
            paths: "$HOME/.dotfiles/rc"
            patterns: "*"
            file_type: file
          register: rc_files

        - name: Setup symlinks for rc files
          ansible.builtin.file:
            src: "{{ item.path }}"
            dest: "$HOME/.{{ item.path | basename }}"
            state: link
            force: true
          with_items: "{{ rc_files.files }}"

        - name: Check if .config folder exists
          ansible.builtin.stat:
            path: "$HOME/.config"
          register: config_folder_exists

        - name: Rename existing .config folder if it exists
          ansible.builtin.command: mv "$HOME/.config" "$HOME/.config.old"
          when: config_folder_exists.stat.exists and not config_folder_exists.stat.islnk

        - name: Remove old .config folder
          ansible.builtin.file:
            path: "$HOME/.config.old"
            state: absent
          when: config_folder_exists.stat.exists and not config_folder_exists.stat.islnk

        - name: Setup link for .config folder
          ansible.builtin.file:
            src: "$HOME/.dotfiles/rc/config"
            dest: "$HOME/.config"
            state: link
            force: true

        - name: Gather all private config files (MacOS)
          ansible.builtin.find:
            paths: "{{ sync_folder_mac }}/Configs/rc/config"
            patterns: "*"
            file_type: directory
          register: private_config_files
          when: is_macos and sync_folder_exists.stat.exists

        - name: Setup symlinks for private config files (MacOS)
          ansible.builtin.file:
            src: "{{ item.path }}"
            dest: "$HOME/.config/{{ item.path | basename }}"
            state: link
          with_items: "{{ private_config_files.files }}"
          when: is_macos and sync_folder_exists.stat.exists

        - name: Gather all private config files (WSL2)
          ansible.builtin.find:
            paths: "{{ sync_folder_wsl2 }}/Configs/rc/config"
            patterns: "*"
            file_type: directory
          register: private_config_files
          when: is_wsl2 and sync_folder_wsl2_exists.stat.exists

        - name: Setup symlinks for private config files (WSL2)
          ansible.builtin.file:
            src: "{{ item.path }}"
            dest: "$HOME/.config/{{ item.path | basename }}"
            state: link
          with_items: "{{ private_config_files.files }}"
          when: is_wsl2 and sync_folder_wsl2_exists.stat.exists

        # Fix WSL2 permission issues someday
        - name: Setup symlinks for ssh config
          ansible.builtin.file:
            src: "{{ sync_folder_mac }}/Configs/SSH_Keys"
            dest: "$HOME/.ssh"
            state: link
          when: is_macos and sync_folder_exists.stat.exists

        - name: Setup symlinks for PGP config
          ansible.builtin.file:
            src: "{{ sync_folder_mac }}/Configs/pgp-keys"
            dest: "$HOME/.gnupg"
            state: link
          when: is_macos and sync_folder_exists.stat.exists

        # - name: Build a list of all MacOS Application Support dirs
        #   ansible.builtin.find:
        #     paths: "{{ sync_folder }}/Configs/AppSupport"
        #     patterns: "*"
        #     file_type: any
        #   register: appsupport_files
        #   when: is_macos

        # - name: Setup symlinks for MacOS Application Support files
        #   ansible.builtin.file:
        #     src: "{{ item.path }}"
        #     dest: "$HOME/Library/Application Support/{{ item.path | basename }}"
        #     state: link
        #   with_items: "{{ appsupport_files.files }}"
        #   when: is_macos and sync_folder_exists.stat.exists

        - name: Build a list of all MacOS Automator dirs
          ansible.builtin.find:
            paths: "{{ sync_folder_mac }}/Configs/automator"
            patterns: "*"
            file_type: any
          register: automator_files
          when: is_macos

        - name: Setup symlinks for MacOS Automator dirs
          ansible.builtin.file:
            src: "{{ item.path }}"
            dest: "$HOME/Library/Services/{{ item.path | basename }}"
            state: link
          with_items: "{{ automator_files.files }}"
          when: is_macos and sync_folder_exists.stat.exists
