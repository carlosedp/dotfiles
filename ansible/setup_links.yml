- name: Setup Links
  hosts: localhost
  connection: local

  # Define config variables
  vars:
    # Define the default shell
    sync_folder: "$HOME/Google Drive/My Drive"

  tasks:
    - name: Set a variable if the OS is Linux or MacOS
      ansible.builtin.set_fact:
        is_linux: "{{ ansible_os_family == 'Debian' or ansible_os_family == 'RedHat' or ansible_os_family == 'Alpine' }}"
        is_macos: "{{ ansible_os_family == 'Darwin' }}"

    - name: Check if sync folder exists
      ansible.builtin.stat:
        path: "{{ sync_folder }}"
      when: is_macos
      register: sync_folder_exists

    - name: Build a list of all rc files
      ansible.builtin.find:
        paths: "$HOME/.dotfiles/rc"
        patterns: "*"
        file_type: file
      register: rc_files

    - name: Setup symlinks for rc files
      ansible.builtin.file:
        src: "{{ item.path }}"
        dest: "$HOME/.{{ item.path | basename }}"
        state: link
      with_items: "{{ rc_files.files }}"

    - name: Setup symlinks for private .config folder
      ansible.builtin.file:
        src: "{{ sync_folder }}/Configs/rc/config"
        dest: "$HOME/.config"
        state: link
      when: sync_folder_exists.stat.exists

    # Fix WSL2 permission issues someday
    - name: Setup symlinks for ssh config
      ansible.builtin.file:
        src: "{{ sync_folder }}/Configs/SSH_Keys"
        dest: "$HOME/.ssh"
        state: link
      when: sync_folder_exists.stat.exists

    - name: Setup symlinks for PGP config
      ansible.builtin.file:
        src: "{{ sync_folder }}/Configs/pgp-keys"
        dest: "$HOME/.gnupg"
        state: link
      when: sync_folder_exists.stat.exists

    - name: Setup symlinks for 2fa config
      ansible.builtin.file:
        src: "{{ sync_folder }}/Configs/2fa/keychain"
        dest: "$HOME/.2fa"
        state: link
      when: sync_folder_exists.stat.exists

    # - name: Build a list of all MacOS Application Support dirs
    #   ansible.builtin.find:
    #     paths: "{{ sync_folder }}/Configs/AppSupport"
    #     patterns: "*"
    #     file_type: any
    #   register: appsupport_files
    #   when: is_macos

    # - name: Setup symlinks for MacOS Application Support files
    #   ansible.builtin.file:
    #     src: "{{ item.path }}"
    #     dest: "$HOME/Library/Application Support/{{ item.path | basename }}"
    #     state: link
    #   with_items: "{{ appsupport_files.files }}"
    #   when: is_macos and sync_folder_exists.stat.exists

    - name: Build a list of all MacOS Automator dirs
      ansible.builtin.find:
        paths: "{{ sync_folder }}/Configs/automator"
        patterns: "*"
        file_type: any
      register: automator_files
      when: is_macos

    - name: Setup symlinks for MacOS Automator dirs
      ansible.builtin.file:
        src: "{{ item.path }}"
        dest: "$HOME/Library/Services/{{ item.path | basename }}"
        state: link
      with_items: "{{ automator_files.files }}"
      when: is_macos and sync_folder_exists.stat.exists
